// Generated by view binder compiler. Do not edit!
package com.mafi.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.mafi.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RadioButton radioButtonDark;

  @NonNull
  public final RadioButton radioButtonLight;

  @NonNull
  public final RadioButton radioButtonSystem;

  @NonNull
  public final RadioGroup radioGroupTheme;

  @NonNull
  public final SwitchMaterial switchNotification;

  @NonNull
  public final TextView textViewAbout;

  @NonNull
  public final TextView textViewAppInfo;

  @NonNull
  public final TextView textViewNotifications;

  @NonNull
  public final TextView textViewSettingsTitle;

  @NonNull
  public final TextView textViewTheme;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull RadioButton radioButtonDark, @NonNull RadioButton radioButtonLight,
      @NonNull RadioButton radioButtonSystem, @NonNull RadioGroup radioGroupTheme,
      @NonNull SwitchMaterial switchNotification, @NonNull TextView textViewAbout,
      @NonNull TextView textViewAppInfo, @NonNull TextView textViewNotifications,
      @NonNull TextView textViewSettingsTitle, @NonNull TextView textViewTheme) {
    this.rootView = rootView;
    this.radioButtonDark = radioButtonDark;
    this.radioButtonLight = radioButtonLight;
    this.radioButtonSystem = radioButtonSystem;
    this.radioGroupTheme = radioGroupTheme;
    this.switchNotification = switchNotification;
    this.textViewAbout = textViewAbout;
    this.textViewAppInfo = textViewAppInfo;
    this.textViewNotifications = textViewNotifications;
    this.textViewSettingsTitle = textViewSettingsTitle;
    this.textViewTheme = textViewTheme;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.radio_button_dark;
      RadioButton radioButtonDark = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonDark == null) {
        break missingId;
      }

      id = R.id.radio_button_light;
      RadioButton radioButtonLight = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonLight == null) {
        break missingId;
      }

      id = R.id.radio_button_system;
      RadioButton radioButtonSystem = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonSystem == null) {
        break missingId;
      }

      id = R.id.radio_group_theme;
      RadioGroup radioGroupTheme = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupTheme == null) {
        break missingId;
      }

      id = R.id.switch_notification;
      SwitchMaterial switchNotification = ViewBindings.findChildViewById(rootView, id);
      if (switchNotification == null) {
        break missingId;
      }

      id = R.id.text_view_about;
      TextView textViewAbout = ViewBindings.findChildViewById(rootView, id);
      if (textViewAbout == null) {
        break missingId;
      }

      id = R.id.text_view_app_info;
      TextView textViewAppInfo = ViewBindings.findChildViewById(rootView, id);
      if (textViewAppInfo == null) {
        break missingId;
      }

      id = R.id.text_view_notifications;
      TextView textViewNotifications = ViewBindings.findChildViewById(rootView, id);
      if (textViewNotifications == null) {
        break missingId;
      }

      id = R.id.text_view_settings_title;
      TextView textViewSettingsTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewSettingsTitle == null) {
        break missingId;
      }

      id = R.id.text_view_theme;
      TextView textViewTheme = ViewBindings.findChildViewById(rootView, id);
      if (textViewTheme == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, radioButtonDark,
          radioButtonLight, radioButtonSystem, radioGroupTheme, switchNotification, textViewAbout,
          textViewAppInfo, textViewNotifications, textViewSettingsTitle, textViewTheme);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
